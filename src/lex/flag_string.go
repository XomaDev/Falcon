// Code generated by "stringer -type=Flag"; DO NOT EDIT.

package lex

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[Operator-0]
	_ = x[LLogicOr-1]
	_ = x[LLogicAnd-2]
	_ = x[BBitwiseOr-3]
	_ = x[BBitwiseAnd-4]
	_ = x[BBitwiseXor-5]
	_ = x[Relational-6]
	_ = x[Equality-7]
	_ = x[Binary-8]
	_ = x[BinaryL1-9]
	_ = x[BinaryL2-10]
	_ = x[TextJoin-11]
	_ = x[Pair-12]
	_ = x[AssignmentType-13]
	_ = x[Unary-14]
	_ = x[Value-15]
	_ = x[ConstantValue-16]
	_ = x[PreserveOrder-17]
}

const _Flag_name = "OperatorLLogicOrLLogicAndBBitwiseOrBBitwiseAndBBitwiseXorRelationalEqualityBinaryBinaryL1BinaryL2TextJoinPairAssignmentTypeUnaryValueConstantValuePreserveOrder"

var _Flag_index = [...]uint8{0, 8, 16, 25, 35, 46, 57, 67, 75, 81, 89, 97, 105, 109, 123, 128, 133, 146, 159}

func (i Flag) String() string {
	if i < 0 || i >= Flag(len(_Flag_index)-1) {
		return "Flag(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _Flag_name[_Flag_index[i]:_Flag_index[i+1]]
}
